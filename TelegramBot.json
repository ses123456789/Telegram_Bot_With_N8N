{
  "name": "TelegramBot",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "d86550f1-0172-4457-933f-a776d9a09976",
      "name": "Telegram Trigger",
      "webhookId": "5b6b6414-a6de-49e9-a536-99dbb87fb517"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[2].file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        224,
        0
      ],
      "id": "cfe17f54-3093-4fb8-bfa6-9b67d783a2e8",
      "name": "Get a file",
      "webhookId": "e203f46d-9646-450e-80ae-3d489294db96",
      "credentials": {
        "telegramApi": {
          "id": "9aN59DhYY6NINNYP",
          "name": "Telegram bot"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Accede al campo de datos\nconst file = items[0].binary?.data; // AsegÃºrate de que el archivo estÃ© en el campo 'binary.data'\n\nif (file) {\n    // Extraer la extensiÃ³n del archivo a partir del nombre\n    const fileExtension = file.fileName.split('.').pop().toLowerCase();\n\n    // Verificar y establecer el tipo MIME correcto\n    if (fileExtension === 'jpg' || fileExtension === 'jpeg') {\n        file.mimeType = 'image/jpeg'; // Cambiar MIME a 'image/jpeg'\n    } else if (fileExtension === 'png') {\n        file.mimeType = 'image/png'; // Cambiar MIME a 'image/png'\n    } else {\n        throw new Error(\"El archivo no es una imagen vÃ¡lida.\");\n    }\n\n    // Devuelve los datos corregidos\n    return [{ binary: { data: file } }];\n} else {\n    throw new Error(\"No se encontraron datos binarios en el archivo.\");\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        0
      ],
      "id": "f634f25b-220c-412b-bcc4-4c6f0da744a6",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bdb162cd-ee1d-416b-8fd2-9dfbb16045df",
              "name": "PhotoTelegram",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1072,
        0
      ],
      "id": "70b7fc2e-c88a-4269-8388-74afb0a6b6db",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=ACTÚA COMO LUZIA LA ASISTENTE FINANCIERA QUE AYUDA A ORGANIZAR INFORMACIÓN FINANCIERA. TU ROL ES:\n\n1. PROCESAR facturas en formato JSON estricto\n2. EXTRAER estos campos:\n   - Fecha (dd-mm-yyyy)\n   - Monto (sin formato)\n   - Glosa\n   - Proveedor\n   - NIT (o \"NO_PROVIDED\")\n   - MétodoPago\n\nEJEMPLO DE RESPUESTA CORRECTA:\n\"Soy Luzia, tu asistente financiera.\nHe procesado tu factura con estos detalles:\n  \n    \"Fecha\": \"24-07-2025\",\n    \"Monto\": \"12600\",\n    \"Proveedor\": \"NOMBRE\",\n    \"Glosa\": \"Producto\",\n    \"NIT\": \"123456789\",\n    \"MetodoPago\": \"Efectivo\"\"\"\n  \n\nLos datos a Analizar se encuentran en  {{ $json.PhotoTelegram }}\nNO quiero que mi respuesta salga ```json ni Tampoco corchetes \"{}\" y que solo me aparezca el contenido de mensaje.\nQuiero que mi respuesta SIEMPRE tenga el formato de \"EJEMPLO DE RESPUESTA CORRECTA\"\nPASO A PASO DE TU RAZONAMIENTO:\n1.\tCOMPRENDER LA FUENTE: 1.1. IDENTIFICAR el formato y tipo de entrada (texto, audio, o PDF). 1.2. ANALIZAR si la información está completa o requiere inferencias.\n2.\tEXTRAER LOS DATOS: 2.1. LOCALIZAR el total del Monto, fecha, comercio/proveedor/empresa asociado, Glosa/Descripción, NIT y Método de PAgo 2.2. IGNORAR SUBPRODUCTOS O DETALLES ESPECÍFICOS, CENTRÁNDOTE SOLO EN EL TOTAL, EL COMERCIO, NIT y Método de Pago.\n3.\tVERIFICAR Y ORGANIZAR: 3.1. ASEGURAR que los datos extraídos sean precisos y completos. 3.2. FORMATEAR los datos correctamente antes de registrarlos.\n4.\tREGISTRAR EN GOOGLE SHEETS: 4.1. TRASPASAR cada dato en su respectivo campo. 4.2. AGREGAR NOTAS EN CASO DE INFORMACIÓN INCOMPLETA O INFERIDA.\n\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1296,
        0
      ],
      "id": "0049186f-4346-4e37-9d6e-52dc1909209d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1CCAi-16BwJ7ZXJzvlGp31gRmRAgzHCLIqqDYfo_Hyz8",
          "mode": "list",
          "cachedResultName": "agente-registra-gastos_948aa043-98bb-46ce-9eeb-55055994f5b3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1CCAi-16BwJ7ZXJzvlGp31gRmRAgzHCLIqqDYfo_Hyz8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1551119893,
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1CCAi-16BwJ7ZXJzvlGp31gRmRAgzHCLIqqDYfo_Hyz8/edit#gid=1551119893"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Fecha": "={{ $fromAI(\"fecha\") }}",
            "Glosa/Descripción": "={{ $fromAI(\"Descripcion\") }}",
            "Monto": "={{ $fromAI(\"Monto\") }}",
            "Proveedor/Comercio": "={{ $fromAI(\"Comercio\") }}",
            "NIT": "={{ $fromAI(\"NIT\") }}",
            "Método de Pago": "={{ $fromAI(\"MetododePago\") }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Fecha",
              "displayName": "Fecha",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Glosa/Descripción",
              "displayName": "Glosa/Descripción",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Monto",
              "displayName": "Monto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Proveedor/Comercio",
              "displayName": "Proveedor/Comercio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "NIT",
              "displayName": "NIT",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Método de Pago",
              "displayName": "Método de Pago",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.6,
      "position": [
        1456,
        224
      ],
      "id": "45bbc0cc-45bc-49ed-8bda-42cc52bff1c4",
      "name": "Append row in sheet in Google Sheets"
    },
    {
      "parameters": {
        "chatId": "={{ $node[\"Telegram Trigger\"].json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1696,
        0
      ],
      "id": "6bc1a5ca-0a95-4b26-ba70-67d0a97f182f",
      "name": "Send a text message",
      "webhookId": "800267ea-0604-413f-88ff-f9d37679935a",
      "credentials": {
        "telegramApi": {
          "id": "9aN59DhYY6NINNYP",
          "name": "Telegram bot"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1328,
        224
      ],
      "id": "42b52fa9-34b3-44f6-b15f-5bcefe741913",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Bgi4Elx7DNHl8iuZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres un experto en análisis OCR. Extrae de la imagen los siguientes campos de factura colombiana y devuélvelos EXCLUSIVAMENTE como un objeto JSON VÁLIDO (sin comentarios, marcas ```json o texto adicional):\n\n{\n  \"Fecha\": \"dd-mm-yyyy\",\n  \"Monto\": \"XXXX COP\",\n  \"Glosa\": \"Descripción clara del gasto\",\n  \"Proveedor/Empresa\": \"Nombre exacto del comercio\",\n  \"NIT\": \"123456789-0\",\n  \"Metodo_de_Pago\": \"Efectivo/Tarjeta de Crédito/Tarjeta de Débito\"\n}\nDame el outpu en formato json",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        672,
        0
      ],
      "id": "c4a7a756-b66f-46e7-9be6-92fb66479610",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        768,
        224
      ],
      "id": "1f25cbe2-9a8a-462c-8648-b0ce4486dd97",
      "name": "Google Gemini Chat Model1"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        []
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "60aa68ae-9e6b-4c9c-8ab8-c0b58d0b397b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e5e8c69cda97054e237ad57cdd1374f8c9f905976470ce3555a12ee43544570a"
  },
  "id": "7F0SUm2bdHtOazjC",
  "tags": []
}